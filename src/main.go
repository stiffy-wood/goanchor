package main

import (
	"context"
	"fmt"
	"goanchor/src/compile"
	"goanchor/src/file"
	"log"
	"os"
	"os/exec"
	"path/filepath"
)

func main() {
	if isComposeBuild(os.Args) {
		fmt.Println(`⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⠤⠴⠶⠖⠛⠛⠒⠒⠒⣒⠚⠛⣷⣿⣾⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⣤⣤⣶⣿⣭⣥⣄⣀⣀⣀⡀⠀⠀⠀⢀⣾⣫⣤⣾⡿⠋⠀⠙⠛⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠓⠲⣾⣯⣿⣿⣭⡶⠷⠀⠀⠀⠀⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⣾⢸⣿⣿⣿⠏⠉⠀⠀⠀⠀⠀⠀⠀⠀⢻⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡶⣻⣿⠋⠁⠀⠀⠀⠀⠀⠞⢁⣠⠄⠀⠀⠀⠀⠀⣿⣧⣸⢷⣿⣯⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠴⣫⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠚⠋⢀⣤⣀⡤⠞⠃⢠⣿⣿⣿⣿⣿⠏⣿⠃⠀⠀⣠⣠⣀⣀⣀⣀⠀⠀⠀⠀⠹⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣀⣀⣘⣻⣿⣿⣁⡀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠶⠋⠉⠉⠀⠀⠀⣾⣿⣿⣿⣿⣿⢸⠟⠀⢀⡴⠛⠁⠀⠀⢈⣙⣶⣄⡀⠀⠀⠙⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠋⠉⠛⠿⣿⣿⣷⣦⣤⣄⠀⠉⠁⠀⠀⠀⠀⠀⡀⢸⣿⣿⣿⣿⣿⡏⠈⠀⣴⠋⠀⠀⠀⠀⠀⢸⠉⠁⠙⢿⣆⠀⠀⠸⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣠⣾⡿⠋⠀⠀⠀⠀⠀⠀⠈⠙⠛⢯⣿⣿⣤⠀⠀⠀⠀⠀⠀⢳⡀⠉⣿⣿⣿⠸⠇⢠⡾⠃⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠈⢻⣷⡀⠀⠸⣯⠻⣆⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣄⠀⠸⡇⠀⢦⠀⠀⢳⡀⢻⣷⡟⠀⢰⡟⠀⠀⠀⠀⠀⠀⠀⠀⠸⣷⣄⣀⣠⡼⠃⠻⣆⠀⢹⣇⠘⢧⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡤⠤⠤⠤⢤⣌⢿⣷⣄⠹⡆⠈⢷⠀⠘⢧⠀⣿⡇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠚⣹⡇⠀⠀⠀⠀⠀⠀⣤⠞⠋⠀⠀⠀⠀⠀⠀⠘⢿⡻⣿⣆⠀⠀⠀⢷⡀⠀⠀⠹⠇⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡇⠀⢻⣷⡄⠀⠀⠀⠀⠀
⠀⠀⢠⣿⠁⠀⠀⠀⠀⣴⠾⠷⠶⣦⠀⠀⠀⠀⠀⠀⠀⠀⠻⣄⡙⠻⣶⠀⠈⠁⠀⠀⠀⠀⠀⠈⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⠀⢻⡽⣆⠀⠀⠀⠀
⣴⠀⣼⠟⠀⠀⠀⠀⣼⠃⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠙⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⠀⠈⣷⡙⣆⠀⠀⠀
⣿⣼⡟⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⢠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠁⠀⠀⠀⠘⣧⣹⡀⠀⠀
⣿⣿⠃⠀⠀⠀⠀⠀⢸⡧⠤⠤⠶⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣸⠋⠀⣀⣤⠶⠋⠉⠉⠉⠙⣿⠟⠛⠳⢶⣍⠻⠶⠶⣶⠶⣒⣒⣲⣖⣚⣋⡀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠀
⣿⡟⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠁⣠⣾⠟⢷⣄⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⣩⠟⠶⣤⣌⡁⠀⠀⠉⠓⠲⠦⣀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠀
⣿⠁⠀⠀⠀⠀⠀⠀⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠋⢀⣼⠟⠁⠀⠀⢽⣦⣄⡀⠀⠀⣿⠓⢦⣤⣼⠋⠀⠀⠀⠈⠙⠶⣾⠲⢦⣤⡀⠈⠳⣤⡀⠀⠀⠀⠀⠹⣿⠀⠀
⣿⠀⡿⠀⠀⠀⠀⢀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⣀⡴⠟⠁⢠⡟⡇⠀⠀⠀⠀⠀⢻⡀⠙⠳⢤⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡀⠀⠙⠶⠀⠀⠀⠀⢹⣧⠀
⣿⣿⡇⠀⠀⠀⠀⠈⠳⣄⡀⠈⠙⠷⠶⠶⠶⠶⠞⠋⠀⠀⠀⣸⡷⢧⣄⡀⠀⠀⠀⢠⡇⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣆⠀⠀⠀⠀⠀⠀⠀⣿⠀
⣿⣿⡇⠀⠀⠀⠀⠀⠀⠈⠙⠛⠒⢦⣤⣀⠀⠀⠀⣠⠀⠀⠀⣿⠀⠀⠙⣯⠉⠉⠉⠙⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣦⠀⠀⠀⠀⠀⠀⣿⠀
⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⣿⣠⠴⠶⠾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⣿⠀
⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠃⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠶⠋⠁⠀⠈⣷⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⣿⠀
⠸⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠾⠋⠙⠲⠶⠋⠁⠀⠀⠀⠀⠀⣿⠀⠀⡾⠛⠳⣤⡀⠀⢰⡇⠀⠀⠀⠀⣿⠀
⠀⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠶⣶⡿⢦⡀⡇⠀⠀⠀⠙⣦⣸⠇⠀⠀⠀⠀⣿⠀
⠀⠸⣿⣹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠲⠶⠶⢶⣶⣶⣾⠉⢁⣴⠋⠀⠀⠹⣿⡀⠀⠀⠀⣀⡿⠀⠀⠀⠀⠀⣿⠀
⠀⠀⢻⣷⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡟⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⣾⠏⠀⠀⠀⠀⠀⢀⣴⠏⠁⠀⠸⣶⡏⢁⣠⣤⣤⣤⣾⣿⣿⣤⣴⠟⠁⠀⠀⠀⠀⠀⣿⠀
⠀⠀⠈⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢿⠁⠀⠀⢠⡟⠀⠀⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠀⡀⠀⢀⡼⠃⠀⠀⢀⣤⠾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡞
⠀⠀⠀⢿⣻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠐⡾⠺⠀⠀⢠⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡴⠛⠉⢻⣆⡾⠁⢠⡴⠖⠋⢁⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁
⠀⠀⠀⠈⢿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠀⠀⠀⠀⣩⡴⠞⠉⠀⣠⠞⠉⢉⡽⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣇⠀
⠀⠀⠀⠀⠈⢻⣿⣦⡀⠀⠀⠀⠀⠀⠈⠣⡄⠀⠀⡇⠀⢀⣤⠶⠛⢧⣀⠀⠀⣸⠋⠀⠀⠀⣠⠞⠋⠀⠀⣠⠞⠁⢠⠔⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣷⣿⠋⠀
⠀⠀⠀⠀⢀⡈⣿⡙⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣏⣁⠀⠀⠀⢉⣙⢾⣁⣀⣀⣴⠞⠁⠀⠀⠀⣸⠇⠀⠰⠋⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡿⠋⠀⠀
⠀⠀⠀⠀⠀⠙⢻⣿⢿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠲⢶⣭⣤⣤⡤⠟⠛⠁⠀⠀⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢿⣆⠀⠙⠿⣷⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠘⣿⡀⠀⠀⠀⠉⠻⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠉⠛⠷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⡾⠛⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢷⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣤⣤⣤⣤⡤⠴⠖⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠛⠿⠶⢦⣤⣤⣤⣤⣤⠤⠴⠿⡿⡛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`)
		return
	}

	if len(os.Args) > 2 && os.Args[1] == "secret" {
		startCompile(os.Args[2])
        return
	}
	exe := filepath.Join(filepath.Dir(os.Args[0]), "original.docker.exe")
	cmd := exec.Command(exe, os.Args[1:]...)
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr

	err := cmd.Start()
	if err != nil {
		log.Fatal(err)
	}

	cmd.Wait()
}

func isComposeBuild(args []string) bool {
	return len(args) > 2 && args[1] == "compose" && args[2] == "build"
}

func startCompile(p string) {
	d, err := file.NewDockerFile(p)
	if err != nil {
		fmt.Println(err)
	}

	c := compile.NewCompiler(d)

	ctx, cancel := context.WithCancel(context.Background())
	res, err := c.Compile(ctx, cancel)
	if err != nil {
		fmt.Println(err)
	}

	fmt.Println(string(res))
}
